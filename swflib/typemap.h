type label = Label.t
let p_label _ctx _x = label_ref _x
let c_label _ = None
type u8 = int
let p_u8 _ctx _x = u8 _x
let c_u8 _ = None
type u30 = int
let p_u30 _ctx _x = u30 _x
let c_u30 _ = None
let p_method_ _ctx _x = u30 @@ RevList.index _x _ctx#methods
let c_method_ _ = None
let p_class_ _ctx _x = u30 @@ RevList.index _x _ctx#classes
let c_class_ _ = None
type uint = int
let p_uint _ctx _x = u30 @@ Cpool.index (`UInt _x) _ctx#cpool
let c_uint _x = Some(`UInt _x)
type namespace = Cpool.namespace
let p_namespace _ctx _x = u30 @@ Cpool.index (`Namespace _x) _ctx#cpool
let c_namespace _x = Some(`Namespace _x)
type multiname = Cpool.multiname
let p_multiname _ctx _x = u30 @@ Cpool.index (`Multiname _x) _ctx#cpool
let c_multiname _x = Some(`Multiname _x)
let p_string _ctx _x = u30 @@ Cpool.index (`String _x) _ctx#cpool
let c_string _x = Some(`String _x)
let p_int _ctx _x = u30 @@ Cpool.index (`Int _x) _ctx#cpool
let c_int _x = Some(`Int _x)
let p_float _ctx _x = u30 @@ Cpool.index (`Double _x) _ctx#cpool
let c_float _x = Some(`Double _x)
