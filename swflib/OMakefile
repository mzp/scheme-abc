# build
OCAMLPACKS[] =
	extlib
	xml-light
	oUnit
	str

FILES[] =
	bytes
	label
	abcType
	lowInst
	methodType
	highInst
	asm
	cpool
	revList
	compile
	abc

UseCamlp4(pa_openin pa_oo pa_field)
PROGRAM=../swflib

OCAMLINCLUDES += $(ROOT)/base
OCAML_LIBS    += $(ROOT)/base/base

OCAMLOPT   = ocamlopt -for-pack $(capitalize $(basename $(PROGRAM)))
OCAMLOPTLINK= ocamlopt

OCamlProgram(gen_inst,gen_inst)
OCamlProgram(gen_typemap,gen_typemap)

# test
OUnitTest(label   , label)
OUnitTest(bytes   , bytes label)
OUnitTest(lowInst , lowInst bytes)
OUnitTest(highInst , highInst label cpool revList)
OUnitTest(asm     , asm label bytes)
OUnitTest(compile , compile cpool bytes label revList)
OUnitTest(revList , revList)
OUnitTest(cpool   , cpool revList)

# phony
.PHONY: clean

.DEFAULT:
MyOCamlPackage($(PROGRAM), $(FILES))

%.type.h: gen_typemap$(EXE)
	./gen_typemap$(EXE) -$> > $@

%.inst.h: gen_inst$(EXE) instruction.txt
     ./gen_inst$(EXE) -$> < instruction.txt > $@

%.pat.h: gen_inst$(EXE) instruction.txt
     ./gen_inst$(EXE) -pat $> < instruction.txt > $@

%.extra.h: gen_inst$(EXE) instruction.txt
     ./gen_inst$(EXE) -extra $> < instruction.txt > $@

.SCANNER: %.ml : %.mlp
    (grep "#include \"" $<;true) | sed 's/.*"\(.*\)".*/'$@': \1/'

clean:
    ocaml-clean *.h lowInst.ml gen_inst$(EXE) gen_typemap$(EXE)
