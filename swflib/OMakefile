# build
OCAMLPACKS[] =
	extlib
	xml-light
	oUnit
	str

FILES[] =
	bytes
	label
	instruction
	abcType
	asm
	abc

UseCamlp4(pa_openin pa_oo)
PROGRAM=../swflib

OCAMLINCLUDES += $(ROOT)/base
OCAML_LIBS    += $(ROOT)/base/base

OCAMLOPT   = ocamlopt -for-pack $(capitalize $(basename $(PROGRAM)))
OCAMLOPTLINK= ocamlopt

OCamlProgram(gen_inst,gen_inst)
OCamlProgram(gen_typemap,gen_typemap)

# test
OUnitTest(bytes   , bytes label)
OUnitTest(abc     , bytes abc label)
OUnitTest(revList , revList)
OUnitTest(cpool   , cpool revList)
OUnitTest(asm     , bytes asm cpool revList)

# phony
.PHONY: clean
.DEFAULT: $(MyOCamlPackage $(PROGRAM), $(FILES))
write.h: gen_inst$(EXE) instruction.txt
    ./gen_inst$(EXE) -writer < instruction.txt > $@

type.h: gen_inst$(EXE) instruction.txt
    ./gen_inst$(EXE) -type < instruction.txt > $@

write_type.h: gen_typemap$(EXE)
    ./gen_typemap$(EXE) -writer > $@

.SCANNER: instruction.ml : instruction.mlp
    grep "#include \"" $< | sed 's/.*"\(.*\)".*/'$@': \1/'

clean:
	ocaml-clean opcode.h match_body.h instruction.ml gen_inst$(EXE) gen_typemap$(EXE)
