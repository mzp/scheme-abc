.PHONY: clean

################################################
#
# This project requires ocamlfind
#
USE_OCAMLFIND = true

OCAMLPACKS[] =
     extlib

if $(not $(OCAMLFIND_EXISTS))
   eprintln('This project requires ocamlfind, but is was not found.')
   eprintln('You need to install ocamlfind and run "omake --configure".')
   exit 1

NATIVE_ENABLED = $(OCAMLOPT_EXISTS)
BYTE_ENABLED = true

UseCamlp4(pa_oo)

################################################
# Build an OCaml program
#
FILES[] =
	parsec
	lexer
	sexp
	clos
	pSet
	lisp
	main

PROGRAM = ../lib/parser
OCAMLOPT   = ocamlopt -for-pack $(capitalize $(basename $(PROGRAM)))
OCAMLOPTLINK  = ocamlopt

OCAMLINCLUDES += $(ROOT)/base/
OCAML_LIBS += $(ROOT)/base/base

OCAMLINCLUDES += ../lib
OCAML_OTHER_LIBS += type


OCamlPackage($(PROGRAM), $(FILES))
.DEFAULT: $(PROGRAM).cmo

%.mli : %.mlip ../type/type.h
    @rm -f $@
    @echo "(* CAUTION: this is a generated file.  If you edit it, all changes will be lost! *)" > $@
    $(CPP) -I../type/ $*.mlip >> $@
    @chmod 444 $@

clean:
	ocaml-clean *.cma *.cmxa closTrans.mli
