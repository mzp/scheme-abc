.PHONY: clean

################################################
#
# This project requires ocamlfind
#
USE_OCAMLFIND = true

OCAMLPACKS[] =
     extlib

if $(not $(OCAMLFIND_EXISTS))
   eprintln('This project requires ocamlfind, but is was not found.')
   eprintln('You need to install ocamlfind and run "omake --configure".')
   exit 1

NATIVE_ENABLED = $(OCAMLOPT_EXISTS)
BYTE_ENABLED = true

################################################
# Build an OCaml program
#
FILES[] =
	label
	bytes
	node
	ast

PROGRAM = ../lib/type
OCAMLOPT   = ocamlopt -for-pack $(capitalize $(basename $(PROGRAM)))
OCAMLOPTLINK  = ocamlopt

OCAMLINCLUDES += $(ROOT)/base/
OCAML_LIBS += $(ROOT)/base/base

OCamlPackage($(PROGRAM), $(FILES))
OCamlLibrary(type, $(FILES))
.DEFAULT: $(PROGRAM).cmo


################################################
#
# additonal rules
#
%.mli : %.mlip type.h
    @rm -f $@
    @echo "(* CAUTION: this is a generated file.  If you edit it, all changes will be lost! *)" > $@
    $(CPP) $*.mlip >> $@
    @chmod 444 $@

clean:
	ocaml-clean *.cma *.cmxa ast.mli gen_inst$(EXE) instruction.ml
