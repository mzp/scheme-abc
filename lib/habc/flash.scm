(module errors ()
	(define-class IllegalOperationError (Object) ())
	(define-class IOError (Object) ())
	(define-class MemoryError (Object) ())
	(define-class StackOverflowError (Object) ())
	(define-class ScriptTimeoutError (Object) ())
	(define-class InvalidSWFError (Object) ())
	(define-class EOFError (Object) ()))
(module text ()
	(define-class CSMSettings (Object) ())
	(define-method fontSize ((self CSMSettings)))
	(define-method insideCutoff ((self CSMSettings)))
	(define-method outsideCutoff ((self CSMSettings)))
	(define-class Font (Object) ())
	(define-method fontStyle ((self Font)))
	(define-method hasGlyphs ((self Font)))
	(define-method fontType ((self Font)))
	(define-method fontName ((self Font)))
	(define-class FontType (Object) ())
	(define-class TextLineMetrics (Object) ())
	(define-method width ((self TextLineMetrics)))
	(define-method ascent ((self TextLineMetrics)))
	(define-method leading ((self TextLineMetrics)))
	(define-method height ((self TextLineMetrics)))
	(define-method x ((self TextLineMetrics)))
	(define-method descent ((self TextLineMetrics)))
	(define-class TextExtent (Object) ())
	(define-method width ((self TextExtent)))
	(define-method height ((self TextExtent)))
	(define-method descent ((self TextExtent)))
	(define-method textFieldHeight ((self TextExtent)))
	(define-method textFieldWidth ((self TextExtent)))
	(define-method ascent ((self TextExtent)))
	(define-class TextFieldAutoSize (Object) ())
	(define-class TextFieldType (Object) ())
	(define-class TextFormat (Object) ())
	(define-method bullet ((self TextFormat)))
	(define-method bullet ((self TextFormat)))
	(define-method align ((self TextFormat)))
	(define-method color ((self TextFormat)))
	(define-method size ((self TextFormat)))
	(define-method display ((self TextFormat)))
	(define-method bold ((self TextFormat)))
	(define-method display ((self TextFormat)))
	(define-method bold ((self TextFormat)))
	(define-method leading ((self TextFormat)))
	(define-method align ((self TextFormat)))
	(define-method leading ((self TextFormat)))
	(define-method rightMargin ((self TextFormat)))
	(define-method leftMargin ((self TextFormat)))
	(define-method font ((self TextFormat)))
	(define-method indent ((self TextFormat)))
	(define-method blockIndent ((self TextFormat)))
	(define-method size ((self TextFormat)))
	(define-method kerning ((self TextFormat)))
	(define-method tabStops ((self TextFormat)))
	(define-method font ((self TextFormat)))
	(define-method kerning ((self TextFormat)))
	(define-method italic ((self TextFormat)))
	(define-method target ((self TextFormat)))
	(define-method color ((self TextFormat)))
	(define-method underline ((self TextFormat)))
	(define-method url ((self TextFormat)))
	(define-method underline ((self TextFormat)))
	(define-method target ((self TextFormat)))
	(define-method leftMargin ((self TextFormat)))
	(define-method indent ((self TextFormat)))
	(define-method url ((self TextFormat)))
	(define-method italic ((self TextFormat)))
	(define-method rightMargin ((self TextFormat)))
	(define-method blockIndent ((self TextFormat)))
	(define-method tabStops ((self TextFormat)))
	(define-method letterSpacing ((self TextFormat)))
	(define-method letterSpacing ((self TextFormat)))
	(define-class TextFormatDisplay (Object) ())
	(define-class TextFormatAlign (Object) ())
	(define-class TextRenderer (Object) ())
	(define-class AntiAliasType (Object) ())
	(define-class GridFitType (Object) ())
	(define-class TextColorType (Object) ())
	(define-class TextDisplayMode (Object) ())
	(define-class FontStyle (Object) ())
	(define-class TextRun (Object) ())
	(define-method textFormat ((self TextRun)))
	(define-method endIndex ((self TextRun)))
	(define-method beginIndex ((self TextRun)))
	(define-class TextSnapshot (Object) ())
	(define-method getText ((self TextSnapshot)))
	(define-method setSelectColor ((self TextSnapshot)))
	(define-method findText ((self TextSnapshot)))
	(define-method getSelected ((self TextSnapshot)))
	(define-method getTextRunInfo ((self TextSnapshot)))
	(define-method charCount ((self TextSnapshot)))
	(define-method hitTestTextNearPos ((self TextSnapshot)))
	(define-method setSelected ((self TextSnapshot)))
	(define-method getSelectedText ((self TextSnapshot)))
	(define-class StyleSheet (Object) ())
	(define-method _styles ((self StyleSheet)))
	(define-method _css ((self StyleSheet)))
	(define-method _parseCSSInternal ((self StyleSheet)))
	(define-method parseCSS ((self StyleSheet)))
	(define-method clear ((self StyleSheet)))
	(define-method _parseColor ((self StyleSheet)))
	(define-method styleNames ((self StyleSheet)))
	(define-method _styles ((self StyleSheet)))
	(define-method _copy ((self StyleSheet)))
	(define-method doTransform ((self StyleSheet)))
	(define-method _parseCSSFontFamily ((self StyleSheet)))
	(define-method _update ((self StyleSheet)))
	(define-method transform ((self StyleSheet)))
	(define-method setStyle ((self StyleSheet)))
	(define-method getStyle ((self StyleSheet)))
	(define-class StaticText (Object) ())
	(define-method text ((self StaticText)))
	(define-class TextField (Object) ())
	(define-method replaceText ((self TextField)))
	(define-method pasteRichText ((self TextField)))
	(define-method maxScrollH ((self TextField)))
	(define-method numLines ((self TextField)))
	(define-method scrollH ((self TextField)))
	(define-method caretIndex ((self TextField)))
	(define-method maxScrollV ((self TextField)))
	(define-method getImageReference ((self TextField)))
	(define-method scrollV ((self TextField)))
	(define-method border ((self TextField)))
	(define-method text ((self TextField)))
	(define-method background ((self TextField)))
	(define-method getCharBoundaries ((self TextField)))
	(define-method borderColor ((self TextField)))
	(define-method scrollH ((self TextField)))
	(define-method getFirstCharInParagraph ((self TextField)))
	(define-method type ((self TextField)))
	(define-method replaceSelectedText ((self TextField)))
	(define-method getRawText ((self TextField)))
	(define-method alwaysShowSelection ((self TextField)))
	(define-method sharpness ((self TextField)))
	(define-method textColor ((self TextField)))
	(define-method defaultTextFormat ((self TextField)))
	(define-method condenseWhite ((self TextField)))
	(define-method autoSize ((self TextField)))
	(define-method scrollV ((self TextField)))
	(define-method border ((self TextField)))
	(define-method styleSheet ((self TextField)))
	(define-method background ((self TextField)))
	(define-method embedFonts ((self TextField)))
	(define-method displayAsPassword ((self TextField)))
	(define-method antiAliasType ((self TextField)))
	(define-method multiline ((self TextField)))
	(define-method selectionEndIndex ((self TextField)))
	(define-method styleSheet ((self TextField)))
	(define-method mouseWheelEnabled ((self TextField)))
	(define-method selectedText ((self TextField)))
	(define-method thickness ((self TextField)))
	(define-method getLineIndexAtPoint ((self TextField)))
	(define-method appendText ((self TextField)))
	(define-method selectionBeginIndex ((self TextField)))
	(define-method textColor ((self TextField)))
	(define-method text ((self TextField)))
	(define-method bottomScrollV ((self TextField)))
	(define-method htmlText ((self TextField)))
	(define-method alwaysShowSelection ((self TextField)))
	(define-method sharpness ((self TextField)))
	(define-method selectable ((self TextField)))
	(define-method getLineIndexOfChar ((self TextField)))
	(define-method restrict ((self TextField)))
	(define-method gridFitType ((self TextField)))
	(define-method setSelection ((self TextField)))
	(define-method getTextFormat ((self TextField)))
	(define-method setTextFormat ((self TextField)))
	(define-method type ((self TextField)))
	(define-method borderColor ((self TextField)))
	(define-method condenseWhite ((self TextField)))
	(define-method textWidth ((self TextField)))
	(define-method getTextRuns ((self TextField)))
	(define-method getLineOffset ((self TextField)))
	(define-method wordWrap ((self TextField)))
	(define-method useRichTextClipboard ((self TextField)))
	(define-method autoSize ((self TextField)))
	(define-method defaultTextFormat ((self TextField)))
	(define-method multiline ((self TextField)))
	(define-method useRichTextClipboard ((self TextField)))
	(define-method backgroundColor ((self TextField)))
	(define-method embedFonts ((self TextField)))
	(define-method selectable ((self TextField)))
	(define-method textHeight ((self TextField)))
	(define-method getXMLText ((self TextField)))
	(define-method displayAsPassword ((self TextField)))
	(define-method getLineText ((self TextField)))
	(define-method maxChars ((self TextField)))
	(define-method mouseWheelEnabled ((self TextField)))
	(define-method copyRichText ((self TextField)))
	(define-method restrict ((self TextField)))
	(define-method gridFitType ((self TextField)))
	(define-method getParagraphLength ((self TextField)))
	(define-method antiAliasType ((self TextField)))
	(define-method backgroundColor ((self TextField)))
	(define-method getCharIndexAtPoint ((self TextField)))
	(define-method maxChars ((self TextField)))
	(define-method length ((self TextField)))
	(define-method thickness ((self TextField)))
	(define-method insertXMLText ((self TextField)))
	(define-method wordWrap ((self TextField)))
	(define-method htmlText ((self TextField)))
	(define-method getLineMetrics ((self TextField)))
	(define-method getLineLength ((self TextField))))
(module net ()
	(define-class IDynamicPropertyOutput (Object) ())
	(define-method lash.net:IDynamicPropertyOutput.writeDynamicProperty ((self IDynamicPropertyOutput)))
	(define-class IDynamicPropertyWriter (Object) ())
	(define-method lash.net:IDynamicPropertyWriter.writeDynamicProperties ((self IDynamicPropertyWriter)))
	(define-class FileFilter (Object) ())
	(define-method macType ((self FileFilter)))
	(define-method extension ((self FileFilter)))
	(define-method description ((self FileFilter)))
	(define-method macType ((self FileFilter)))
	(define-method description ((self FileFilter)))
	(define-method extension ((self FileFilter)))
	(define-class ObjectEncoding (Object) ())
	(define-class Responder (Object) ())
	(define-class SharedObjectFlushStatus (Object) ())
	(define-class URLLoaderDataFormat (Object) ())
	(define-class URLRequest (Object) ())
	(define-method method ((self URLRequest)))
	(define-method contentType ((self URLRequest)))
	(define-method method ((self URLRequest)))
	(define-method data ((self URLRequest)))
	(define-method requestHeaders ((self URLRequest)))
	(define-method data ((self URLRequest)))
	(define-method url ((self URLRequest)))
	(define-method requestHeaders ((self URLRequest)))
	(define-method contentType ((self URLRequest)))
	(define-method url ((self URLRequest)))
	(define-class URLRequestHeader (Object) ())
	(define-method value ((self URLRequestHeader)))
	(define-method name ((self URLRequestHeader)))
	(define-class URLRequestMethod (Object) ())
	(define-class URLVariables (Object) ())
	(define-method _unescape ((self URLVariables)))
	(define-method toString ((self URLVariables)))
	(define-method decode ((self URLVariables)))
	(define-class FileReference (Object) ())
	(define-method browse ((self FileReference)))
	(define-method creator ((self FileReference)))
	(define-method size ((self FileReference)))
	(define-method type ((self FileReference)))
	(define-method name ((self FileReference)))
	(define-method upload ((self FileReference)))
	(define-method cancel ((self FileReference)))
	(define-method download ((self FileReference)))
	(define-method modificationDate ((self FileReference)))
	(define-method creationDate ((self FileReference)))
	(define-class FileReferenceList (Object) ())
	(define-method browse ((self FileReferenceList)))
	(define-method fileList ((self FileReferenceList)))
	(define-class LocalConnection (Object) ())
	(define-method domain ((self LocalConnection)))
	(define-method send ((self LocalConnection)))
	(define-method allowInsecureDomain ((self LocalConnection)))
	(define-method client ((self LocalConnection)))
	(define-method client ((self LocalConnection)))
	(define-method connect ((self LocalConnection)))
	(define-method allowDomain ((self LocalConnection)))
	(define-method close ((self LocalConnection)))
	(define-class NetConnection (Object) ())
	(define-method proxyType ((self NetConnection)))
	(define-method connected ((self NetConnection)))
	(define-method client ((self NetConnection)))
	(define-method addHeader ((self NetConnection)))
	(define-method proxyType ((self NetConnection)))
	(define-method client ((self NetConnection)))
	(define-method usingTLS ((self NetConnection)))
	(define-method invoke ((self NetConnection)))
	(define-method call ((self NetConnection)))
	(define-method objectEncoding ((self NetConnection)))
	(define-method connect ((self NetConnection)))
	(define-method uri ((self NetConnection)))
	(define-method objectEncoding ((self NetConnection)))
	(define-method close ((self NetConnection)))
	(define-method invokeWithArgsArray ((self NetConnection)))
	(define-method connectedProxyType ((self NetConnection)))
	(define-class NetStream (Object) ())
	(define-method togglePause ((self NetStream)))
	(define-method send ((self NetStream)))
	(define-method seek ((self NetStream)))
	(define-method attachAudio ((self NetStream)))
	(define-method publish ((self NetStream)))
	(define-method bytesTotal ((self NetStream)))
	(define-method soundTransform ((self NetStream)))
	(define-method client ((self NetStream)))
	(define-method bufferTime ((self NetStream)))
	(define-method currentFPS ((self NetStream)))
	(define-method onStatus ((self NetStream)))
	(define-method objectEncoding ((self NetStream)))
	(define-method play ((self NetStream)))
	(define-method soundTransform ((self NetStream)))
	(define-method resume ((self NetStream)))
	(define-method invokeWithArgsArray ((self NetStream)))
	(define-method receiveAudio ((self NetStream)))
	(define-method bufferLength ((self NetStream)))
	(define-method client ((self NetStream)))
	(define-method bytesLoaded ((self NetStream)))
	(define-method construct ((self NetStream)))
	(define-method receiveVideo ((self NetStream)))
	(define-method attachCamera ((self NetStream)))
	(define-method bufferTime ((self NetStream)))
	(define-method videoCodec ((self NetStream)))
	(define-method onResult ((self NetStream)))
	(define-method call ((self NetStream)))
	(define-method audioCodec ((self NetStream)))
	(define-method time ((self NetStream)))
	(define-method checkPolicyFile ((self NetStream)))
	(define-method pause ((self NetStream)))
	(define-method liveDelay ((self NetStream)))
	(define-method invoke ((self NetStream)))
	(define-method decodedFrames ((self NetStream)))
	(define-method checkPolicyFile ((self NetStream)))
	(define-method close ((self NetStream)))
	(define-class SharedObject (Object) ())
	(define-method flush ((self SharedObject)))
	(define-method size ((self SharedObject)))
	(define-method client ((self SharedObject)))
	(define-method setDirty ((self SharedObject)))
	(define-method fps ((self SharedObject)))
	(define-method clear ((self SharedObject)))
	(define-method client ((self SharedObject)))
	(define-method send ((self SharedObject)))
	(define-method setProperty ((self SharedObject)))
	(define-method objectEncoding ((self SharedObject)))
	(define-method connect ((self SharedObject)))
	(define-method data ((self SharedObject)))
	(define-method objectEncoding ((self SharedObject)))
	(define-method close ((self SharedObject)))
	(define-method invokeWithArgsArray ((self SharedObject)))
	(define-method invoke ((self SharedObject)))
	(define-class Socket (Object) ())
	(define-method writeUTFBytes ((self Socket)))
	(define-method flush ((self Socket)))
	(define-method connected ((self Socket)))
	(define-method writeByte ((self Socket)))
	(define-method writeInt ((self Socket)))
	(define-method readShort ((self Socket)))
	(define-method readUnsignedShort ((self Socket)))
	(define-method endian ((self Socket)))
	(define-method objectEncoding ((self Socket)))
	(define-method writeDouble ((self Socket)))
	(define-method readObject ((self Socket)))
	(define-method bytesAvailable ((self Socket)))
	(define-method readDouble ((self Socket)))
	(define-method readUTF ((self Socket)))
	(define-method readBoolean ((self Socket)))
	(define-method readUTFBytes ((self Socket)))
	(define-method writeMultiByte ((self Socket)))
	(define-method writeFloat ((self Socket)))
	(define-method readByte ((self Socket)))
	(define-method writeUTF ((self Socket)))
	(define-method writeBoolean ((self Socket)))
	(define-method readUnsignedInt ((self Socket)))
	(define-method writeBytes ((self Socket)))
	(define-method endian ((self Socket)))
	(define-method readUnsignedByte ((self Socket)))
	(define-method writeUnsignedInt ((self Socket)))
	(define-method writeShort ((self Socket)))
	(define-method objectEncoding ((self Socket)))
	(define-method readFloat ((self Socket)))
	(define-method connect ((self Socket)))
	(define-method readMultiByte ((self Socket)))
	(define-method close ((self Socket)))
	(define-method readInt ((self Socket)))
	(define-method readBytes ((self Socket)))
	(define-method writeObject ((self Socket)))
	(define-class URLLoader (Object) ())
	(define-method onProgress ((self URLLoader)))
	(define-method dataFormat ((self URLLoader)))
	(define-method bytesLoaded ((self URLLoader)))
	(define-method stream ((self URLLoader)))
	(define-method bytesTotal ((self URLLoader)))
	(define-method redirectEvent ((self URLLoader)))
	(define-method load ((self URLLoader)))
	(define-method data ((self URLLoader)))
	(define-method close ((self URLLoader)))
	(define-method onComplete ((self URLLoader)))
	(define-class URLStream (Object) ())
	(define-method readBytes ((self URLStream)))
	(define-method connected ((self URLStream)))
	(define-method readShort ((self URLStream)))
	(define-method readDouble ((self URLStream)))
	(define-method readUnsignedShort ((self URLStream)))
	(define-method endian ((self URLStream)))
	(define-method bytesAvailable ((self URLStream)))
	(define-method readUTF ((self URLStream)))
	(define-method objectEncoding ((self URLStream)))
	(define-method endian ((self URLStream)))
	(define-method readBoolean ((self URLStream)))
	(define-method readUTFBytes ((self URLStream)))
	(define-method readByte ((self URLStream)))
	(define-method readUnsignedInt ((self URLStream)))
	(define-method readUnsignedByte ((self URLStream)))
	(define-method objectEncoding ((self URLStream)))
	(define-method load ((self URLStream)))
	(define-method readMultiByte ((self URLStream)))
	(define-method readObject ((self URLStream)))
	(define-method readInt ((self URLStream)))
	(define-method readFloat ((self URLStream)))
	(define-method close ((self URLStream)))
	(define-class XMLSocket (Object) ())
	(define-method send ((self XMLSocket)))
	(define-method connected ((self XMLSocket)))
	(define-method connect ((self XMLSocket)))
	(define-method close ((self XMLSocket))))
(module utils ()
	(define-class IExternalizable (Object) ())
	(define-method lash.utils:IExternalizable.readExternal ((self IExternalizable)))
	(define-method lash.utils:IExternalizable.writeExternal ((self IExternalizable)))
	(define-class CustomActions (Object) ())
	(define-class Endian (Object) ())
	(define-class IDataInput (Object) ())
	(define-method lash.utils:IDataInput.readUnsignedInt ((self IDataInput)))
	(define-method lash.utils:IDataInput.bytesAvailable ((self IDataInput)))
	(define-method lash.utils:IDataInput.readShort ((self IDataInput)))
	(define-method lash.utils:IDataInput.objectEncoding ((self IDataInput)))
	(define-method lash.utils:IDataInput.readMultiByte ((self IDataInput)))
	(define-method lash.utils:IDataInput.readFloat ((self IDataInput)))
	(define-method lash.utils:IDataInput.readDouble ((self IDataInput)))
	(define-method lash.utils:IDataInput.readUnsignedShort ((self IDataInput)))
	(define-method lash.utils:IDataInput.readBoolean ((self IDataInput)))
	(define-method lash.utils:IDataInput.readUnsignedByte ((self IDataInput)))
	(define-method lash.utils:IDataInput.readBytes ((self IDataInput)))
	(define-method lash.utils:IDataInput.endian ((self IDataInput)))
	(define-method lash.utils:IDataInput.readUTF ((self IDataInput)))
	(define-method lash.utils:IDataInput.readInt ((self IDataInput)))
	(define-method lash.utils:IDataInput.readUTFBytes ((self IDataInput)))
	(define-method lash.utils:IDataInput.endian ((self IDataInput)))
	(define-method lash.utils:IDataInput.readObject ((self IDataInput)))
	(define-method lash.utils:IDataInput.objectEncoding ((self IDataInput)))
	(define-method lash.utils:IDataInput.readByte ((self IDataInput)))
	(define-class IDataOutput (Object) ())
	(define-method lash.utils:IDataOutput.writeMultiByte ((self IDataOutput)))
	(define-method lash.utils:IDataOutput.writeUTFBytes ((self IDataOutput)))
	(define-method lash.utils:IDataOutput.writeShort ((self IDataOutput)))
	(define-method lash.utils:IDataOutput.writeByte ((self IDataOutput)))
	(define-method lash.utils:IDataOutput.writeUTF ((self IDataOutput)))
	(define-method lash.utils:IDataOutput.writeBoolean ((self IDataOutput)))
	(define-method lash.utils:IDataOutput.endian ((self IDataOutput)))
	(define-method lash.utils:IDataOutput.objectEncoding ((self IDataOutput)))
	(define-method lash.utils:IDataOutput.writeBytes ((self IDataOutput)))
	(define-method lash.utils:IDataOutput.writeInt ((self IDataOutput)))
	(define-method lash.utils:IDataOutput.objectEncoding ((self IDataOutput)))
	(define-method lash.utils:IDataOutput.endian ((self IDataOutput)))
	(define-method lash.utils:IDataOutput.writeDouble ((self IDataOutput)))
	(define-method lash.utils:IDataOutput.writeUnsignedInt ((self IDataOutput)))
	(define-method lash.utils:IDataOutput.writeFloat ((self IDataOutput)))
	(define-method lash.utils:IDataOutput.writeObject ((self IDataOutput)))
	(define-class Proxy (Object) ())
	(define-method ttp://www.adobe.com/2006/actionscript/flash/proxy.deleteProperty ((self Proxy)))
	(define-method ttp://www.adobe.com/2006/actionscript/flash/proxy.nextValue ((self Proxy)))
	(define-method ttp://www.adobe.com/2006/actionscript/flash/proxy.getDescendants ((self Proxy)))
	(define-method ttp://www.adobe.com/2006/actionscript/flash/proxy.getProperty ((self Proxy)))
	(define-method ttp://www.adobe.com/2006/actionscript/flash/proxy.hasProperty ((self Proxy)))
	(define-method ttp://www.adobe.com/2006/actionscript/flash/proxy.isAttribute ((self Proxy)))
	(define-method ttp://www.adobe.com/2006/actionscript/flash/proxy.callProperty ((self Proxy)))
	(define-method ttp://www.adobe.com/2006/actionscript/flash/proxy.nextNameIndex ((self Proxy)))
	(define-method ttp://www.adobe.com/2006/actionscript/flash/proxy.setProperty ((self Proxy)))
	(define-method ttp://www.adobe.com/2006/actionscript/flash/proxy.nextName ((self Proxy)))
	(define-class XMLUI (Object) ())
	(define-class Dictionary (Object) ())
	(define-class ByteArray (Object) ())
	(define-method writeUTFBytes ((self ByteArray)))
	(define-method readObject ((self ByteArray)))
	(define-method writeObject ((self ByteArray)))
	(define-method readShort ((self ByteArray)))
	(define-method writeDouble ((self ByteArray)))
	(define-method writeByte ((self ByteArray)))
	(define-method readUnsignedShort ((self ByteArray)))
	(define-method endian ((self ByteArray)))
	(define-method bytesAvailable ((self ByteArray)))
	(define-method writeInt ((self ByteArray)))
	(define-method position ((self ByteArray)))
	(define-method readBoolean ((self ByteArray)))
	(define-method readDouble ((self ByteArray)))
	(define-method endian ((self ByteArray)))
	(define-method readUTF ((self ByteArray)))
	(define-method readUTFBytes ((self ByteArray)))
	(define-method readUnsignedInt ((self ByteArray)))
	(define-method readByte ((self ByteArray)))
	(define-method writeUTF ((self ByteArray)))
	(define-method objectEncoding ((self ByteArray)))
	(define-method writeBoolean ((self ByteArray)))
	(define-method writeMultiByte ((self ByteArray)))
	(define-method position ((self ByteArray)))
	(define-method writeBytes ((self ByteArray)))
	(define-method writeFloat ((self ByteArray)))
	(define-method readUnsignedByte ((self ByteArray)))
	(define-method writeUnsignedInt ((self ByteArray)))
	(define-method writeShort ((self ByteArray)))
	(define-method compress ((self ByteArray)))
	(define-method toString ((self ByteArray)))
	(define-method readFloat ((self ByteArray)))
	(define-method length ((self ByteArray)))
	(define-method objectEncoding ((self ByteArray)))
	(define-method readInt ((self ByteArray)))
	(define-method readMultiByte ((self ByteArray)))
	(define-method uncompress ((self ByteArray)))
	(define-method readBytes ((self ByteArray)))
	(define-method length ((self ByteArray)))
	(define-class ProductManager (Object) ())
	(define-method launch ((self ProductManager)))
	(define-method download ((self ProductManager)))
	(define-method installed ((self ProductManager)))
	(define-method installedVersion ((self ProductManager)))
	(define-method running ((self ProductManager)))
	(define-class Timer (Object) ())
	(define-method stop ((self Timer)))
	(define-method delay ((self Timer)))
	(define-method m_iteration ((self Timer)))
	(define-method currentCount ((self Timer)))
	(define-method delay ((self Timer)))
	(define-method _timerDispatch ((self Timer)))
	(define-method _start ((self Timer)))
	(define-method tick ((self Timer)))
	(define-method reset ((self Timer)))
	(define-method repeatCount ((self Timer)))
	(define-method m_repeatCount ((self Timer)))
	(define-method m_delay ((self Timer)))
	(define-method repeatCount ((self Timer)))
	(define-method start ((self Timer)))
	(define-method running ((self Timer))))
(module display ()
	(define-class IBitmapDrawable (Object) ())
	(define-class BlendMode (Object) ())
	(define-class Graphics (Object) ())
	(define-method drawRoundRectComplex ((self Graphics)))
	(define-method drawCircle ((self Graphics)))
	(define-method drawRect ((self Graphics)))
	(define-method curveTo ((self Graphics)))
	(define-method beginFill ((self Graphics)))
	(define-method lineGradientStyle ((self Graphics)))
	(define-method drawRoundRect ((self Graphics)))
	(define-method moveTo ((self Graphics)))
	(define-method clear ((self Graphics)))
	(define-method lineTo ((self Graphics)))
	(define-method drawEllipse ((self Graphics)))
	(define-method beginBitmapFill ((self Graphics)))
	(define-method beginGradientFill ((self Graphics)))
	(define-method lineStyle ((self Graphics)))
	(define-method endFill ((self Graphics)))
	(define-class GradientType (Object) ())
	(define-class SpreadMethod (Object) ())
	(define-class InterpolationMethod (Object) ())
	(define-class LineScaleMode (Object) ())
	(define-class CapsStyle (Object) ())
	(define-class JointStyle (Object) ())
	(define-class BitmapDataChannel (Object) ())
	(define-class PixelSnapping (Object) ())
	(define-class Scene (Object) ())
	(define-method _name ((self Scene)))
	(define-method name ((self Scene)))
	(define-method numFrames ((self Scene)))
	(define-method _numFrames ((self Scene)))
	(define-method _labels ((self Scene)))
	(define-method labels ((self Scene)))
	(define-class FrameLabel (Object) ())
	(define-method _name ((self FrameLabel)))
	(define-method name ((self FrameLabel)))
	(define-method frame ((self FrameLabel)))
	(define-method _frame ((self FrameLabel)))
	(define-class SWFVersion (Object) ())
	(define-class ActionScriptVersion (Object) ())
	(define-class StageAlign (Object) ())
	(define-class StageQuality (Object) ())
	(define-class StageScaleMode (Object) ())
	(define-class BitmapData (Object) ())
	(define-method copyPixels ((self BitmapData)))
	(define-method setPixel ((self BitmapData)))
	(define-method hitTest ((self BitmapData)))
	(define-method width ((self BitmapData)))
	(define-method colorTransform ((self BitmapData)))
	(define-method draw ((self BitmapData)))
	(define-method applyFilter ((self BitmapData)))
	(define-method fillRect ((self BitmapData)))
	(define-method getPixel ((self BitmapData)))
	(define-method generateFilterRect ((self BitmapData)))
	(define-method transparent ((self BitmapData)))
	(define-method unlock ((self BitmapData)))
	(define-method scroll ((self BitmapData)))
	(define-method copyChannel ((self BitmapData)))
	(define-method pixelDissolve ((self BitmapData)))
	(define-method noise ((self BitmapData)))
	(define-method clone ((self BitmapData)))
	(define-method getColorBoundsRect ((self BitmapData)))
	(define-method dispose ((self BitmapData)))
	(define-method floodFill ((self BitmapData)))
	(define-method setPixel32 ((self BitmapData)))
	(define-method rect ((self BitmapData)))
	(define-method compare ((self BitmapData)))
	(define-method perlinNoise ((self BitmapData)))
	(define-method height ((self BitmapData)))
	(define-method paletteMap ((self BitmapData)))
	(define-method getPixels ((self BitmapData)))
	(define-method threshold ((self BitmapData)))
	(define-method getPixel32 ((self BitmapData)))
	(define-method lock ((self BitmapData)))
	(define-method setPixels ((self BitmapData)))
	(define-method merge ((self BitmapData)))
	(define-class DisplayObject (Object) ())
	(define-method y ((self DisplayObject)))
	(define-method transform ((self DisplayObject)))
	(define-method stage ((self DisplayObject)))
	(define-method localToGlobal ((self DisplayObject)))
	(define-method name ((self DisplayObject)))
	(define-method width ((self DisplayObject)))
	(define-method blendMode ((self DisplayObject)))
	(define-method scale9Grid ((self DisplayObject)))
	(define-method name ((self DisplayObject)))
	(define-method scaleX ((self DisplayObject)))
	(define-method scaleY ((self DisplayObject)))
	(define-method accessibilityProperties ((self DisplayObject)))
	(define-method scrollRect ((self DisplayObject)))
	(define-method cacheAsBitmap ((self DisplayObject)))
	(define-method globalToLocal ((self DisplayObject)))
	(define-method height ((self DisplayObject)))
	(define-method blendMode ((self DisplayObject)))
	(define-method parent ((self DisplayObject)))
	(define-method getBounds ((self DisplayObject)))
	(define-method opaqueBackground ((self DisplayObject)))
	(define-method scale9Grid ((self DisplayObject)))
	(define-method _hitTest ((self DisplayObject)))
	(define-method alpha ((self DisplayObject)))
	(define-method accessibilityProperties ((self DisplayObject)))
	(define-method width ((self DisplayObject)))
	(define-method hitTestPoint ((self DisplayObject)))
	(define-method scaleX ((self DisplayObject)))
	(define-method scaleY ((self DisplayObject)))
	(define-method mouseX ((self DisplayObject)))
	(define-method height ((self DisplayObject)))
	(define-method mask ((self DisplayObject)))
	(define-method getRect ((self DisplayObject)))
	(define-method mouseY ((self DisplayObject)))
	(define-method alpha ((self DisplayObject)))
	(define-method transform ((self DisplayObject)))
	(define-method scrollRect ((self DisplayObject)))
	(define-method loaderInfo ((self DisplayObject)))
	(define-method root ((self DisplayObject)))
	(define-method visible ((self DisplayObject)))
	(define-method opaqueBackground ((self DisplayObject)))
	(define-method cacheAsBitmap ((self DisplayObject)))
	(define-method hitTestObject ((self DisplayObject)))
	(define-method x ((self DisplayObject)))
	(define-method y ((self DisplayObject)))
	(define-method mask ((self DisplayObject)))
	(define-method filters ((self DisplayObject)))
	(define-method x ((self DisplayObject)))
	(define-method visible ((self DisplayObject)))
	(define-method filters ((self DisplayObject)))
	(define-method rotation ((self DisplayObject)))
	(define-method rotation ((self DisplayObject)))
	(define-class LoaderInfo (Object) ())
	(define-method dispatchEvent ((self LoaderInfo)))
	(define-method bytesLoaded ((self LoaderInfo)))
	(define-method contentType ((self LoaderInfo)))
	(define-method childAllowsParent ((self LoaderInfo)))
	(define-method bytesTotal ((self LoaderInfo)))
	(define-method loader ((self LoaderInfo)))
	(define-method _getArgs ((self LoaderInfo)))
	(define-method loaderURL ((self LoaderInfo)))
	(define-method width ((self LoaderInfo)))
	(define-method sameDomain ((self LoaderInfo)))
	(define-method sharedEvents ((self LoaderInfo)))
	(define-method height ((self LoaderInfo)))
	(define-method parentAllowsChild ((self LoaderInfo)))
	(define-method parameters ((self LoaderInfo)))
	(define-method frameRate ((self LoaderInfo)))
	(define-method url ((self LoaderInfo)))
	(define-method swfVersion ((self LoaderInfo)))
	(define-method actionScriptVersion ((self LoaderInfo)))
	(define-method content ((self LoaderInfo)))
	(define-method applicationDomain ((self LoaderInfo)))
	(define-class AVM1Movie (Object) ())
	(define-method _setCallAS3 ((self AVM1Movie)))
	(define-method callbackTable ((self AVM1Movie)))
	(define-method _callAS3 ((self AVM1Movie)))
	(define-method addCallback ((self AVM1Movie)))
	(define-method _callAS2 ((self AVM1Movie)))
	(define-method call ((self AVM1Movie)))
	(define-method _interopAvailable ((self AVM1Movie)))
	(define-class Bitmap (Object) ())
	(define-method bitmapData ((self Bitmap)))
	(define-method bitmapData ((self Bitmap)))
	(define-method smoothing ((self Bitmap)))
	(define-method pixelSnapping ((self Bitmap)))
	(define-method pixelSnapping ((self Bitmap)))
	(define-method smoothing ((self Bitmap)))
	(define-class InteractiveObject (Object) ())
	(define-method tabEnabled ((self InteractiveObject)))
	(define-method doubleClickEnabled ((self InteractiveObject)))
	(define-method contextMenu ((self InteractiveObject)))
	(define-method accessibilityImplementation ((self InteractiveObject)))
	(define-method doubleClickEnabled ((self InteractiveObject)))
	(define-method contextMenu ((self InteractiveObject)))
	(define-method mouseEnabled ((self InteractiveObject)))
	(define-method focusRect ((self InteractiveObject)))
	(define-method tabIndex ((self InteractiveObject)))
	(define-method mouseEnabled ((self InteractiveObject)))
	(define-method focusRect ((self InteractiveObject)))
	(define-method tabEnabled ((self InteractiveObject)))
	(define-method accessibilityImplementation ((self InteractiveObject)))
	(define-method tabIndex ((self InteractiveObject)))
	(define-class MorphShape (Object) ())
	(define-class Shape (Object) ())
	(define-method graphics ((self Shape)))
	(define-class SimpleButton (Object) ())
	(define-method enabled ((self SimpleButton)))
	(define-method useHandCursor ((self SimpleButton)))
	(define-method useHandCursor ((self SimpleButton)))
	(define-method overState ((self SimpleButton)))
	(define-method soundTransform ((self SimpleButton)))
	(define-method downState ((self SimpleButton)))
	(define-method trackAsMenu ((self SimpleButton)))
	(define-method upState ((self SimpleButton)))
	(define-method upState ((self SimpleButton)))
	(define-method _updateButton ((self SimpleButton)))
	(define-method enabled ((self SimpleButton)))
	(define-method hitTestState ((self SimpleButton)))
	(define-method downState ((self SimpleButton)))
	(define-method overState ((self SimpleButton)))
	(define-method hitTestState ((self SimpleButton)))
	(define-method trackAsMenu ((self SimpleButton)))
	(define-method soundTransform ((self SimpleButton)))
	(define-class DisplayObjectContainer (Object) ())
	(define-method addChild ((self DisplayObjectContainer)))
	(define-method getChildByName ((self DisplayObjectContainer)))
	(define-method textSnapshot ((self DisplayObjectContainer)))
	(define-method getChildIndex ((self DisplayObjectContainer)))
	(define-method mouseChildren ((self DisplayObjectContainer)))
	(define-method setChildIndex ((self DisplayObjectContainer)))
	(define-method addChildAt ((self DisplayObjectContainer)))
	(define-method contains ((self DisplayObjectContainer)))
	(define-method numChildren ((self DisplayObjectContainer)))
	(define-method swapChildrenAt ((self DisplayObjectContainer)))
	(define-method tabChildren ((self DisplayObjectContainer)))
	(define-method getChildAt ((self DisplayObjectContainer)))
	(define-method swapChildren ((self DisplayObjectContainer)))
	(define-method getObjectsUnderPoint ((self DisplayObjectContainer)))
	(define-method mouseChildren ((self DisplayObjectContainer)))
	(define-method removeChildAt ((self DisplayObjectContainer)))
	(define-method tabChildren ((self DisplayObjectContainer)))
	(define-method areInaccessibleObjectsUnderPoint ((self DisplayObjectContainer)))
	(define-method removeChild ((self DisplayObjectContainer)))
	(define-class Loader (Object) ())
	(define-method addChild ((self Loader)))
	(define-method unload ((self Loader)))
	(define-method setChildIndex ((self Loader)))
	(define-method loadBytes ((self Loader)))
	(define-method removeChildAt ((self Loader)))
	(define-method content ((self Loader)))
	(define-method addChildAt ((self Loader)))
	(define-method _loadBytes ((self Loader)))
	(define-method contentLoaderInfo ((self Loader)))
	(define-method _load ((self Loader)))
	(define-method load ((self Loader)))
	(define-method _buildLoaderContext ((self Loader)))
	(define-method removeChild ((self Loader)))
	(define-method close ((self Loader)))
	(define-class Sprite (Object) ())
	(define-method soundTransform ((self Sprite)))
	(define-method useHandCursor ((self Sprite)))
	(define-method soundTransform ((self Sprite)))
	(define-method stopDrag ((self Sprite)))
	(define-method dropTarget ((self Sprite)))
	(define-method hitArea ((self Sprite)))
	(define-method graphics ((self Sprite)))
	(define-method useHandCursor ((self Sprite)))
	(define-method startDrag ((self Sprite)))
	(define-method hitArea ((self Sprite)))
	(define-method buttonMode ((self Sprite)))
	(define-method buttonMode ((self Sprite)))
	(define-method constructChildren ((self Sprite)))
	(define-class Stage (Object) ())
	(define-method addChild ((self Stage)))
	(define-method align ((self Stage)))
	(define-method stageFocusRect ((self Stage)))
	(define-method scaleMode ((self Stage)))
	(define-method textSnapshot ((self Stage)))
	(define-method name ((self Stage)))
	(define-method setChildIndex ((self Stage)))
	(define-method align ((self Stage)))
	(define-method scaleMode ((self Stage)))
	(define-method showDefaultContextMenu ((self Stage)))
	(define-method quality ((self Stage)))
	(define-method height ((self Stage)))
	(define-method blendMode ((self Stage)))
	(define-method scale9Grid ((self Stage)))
	(define-method invalidate ((self Stage)))
	(define-method accessibilityImplementation ((self Stage)))
	(define-method accessibilityProperties ((self Stage)))
	(define-method cacheAsBitmap ((self Stage)))
	(define-method dispatchEvent ((self Stage)))
	(define-method removeChildAt ((self Stage)))
	(define-method addEventListener ((self Stage)))
	(define-method height ((self Stage)))
	(define-method contextMenu ((self Stage)))
	(define-method requireOwnerPermissions ((self Stage)))
	(define-method opaqueBackground ((self Stage)))
	(define-method tabChildren ((self Stage)))
	(define-method stageWidth ((self Stage)))
	(define-method tabIndex ((self Stage)))
	(define-method swapChildrenAt ((self Stage)))
	(define-method stageHeight ((self Stage)))
	(define-method width ((self Stage)))
	(define-method willTrigger ((self Stage)))
	(define-method addChildAt ((self Stage)))
	(define-method mouseChildren ((self Stage)))
	(define-method isFocusInaccessible ((self Stage)))
	(define-method showDefaultContextMenu ((self Stage)))
	(define-method stageFocusRect ((self Stage)))
	(define-method scaleX ((self Stage)))
	(define-method scaleY ((self Stage)))
	(define-method scrollRect ((self Stage)))
	(define-method numChildren ((self Stage)))
	(define-method focus ((self Stage)))
	(define-method tabChildren ((self Stage)))
	(define-method focusRect ((self Stage)))
	(define-method alpha ((self Stage)))
	(define-method mouseEnabled ((self Stage)))
	(define-method mouseChildren ((self Stage)))
	(define-method stageHeight ((self Stage)))
	(define-method width ((self Stage)))
	(define-method stageWidth ((self Stage)))
	(define-method mask ((self Stage)))
	(define-method frameRate ((self Stage)))
	(define-method transform ((self Stage)))
	(define-method visible ((self Stage)))
	(define-method tabEnabled ((self Stage)))
	(define-method frameRate ((self Stage)))
	(define-method x ((self Stage)))
	(define-method y ((self Stage)))
	(define-method hasEventListener ((self Stage)))
	(define-method filters ((self Stage)))
	(define-method focus ((self Stage)))
	(define-method rotation ((self Stage)))
	(define-method quality ((self Stage)))
	(define-class MovieClip (Object) ())
	(define-method currentLabels ((self MovieClip)))
	(define-method stop ((self MovieClip)))
	(define-method currentLabel ((self MovieClip)))
	(define-method totalFrames ((self MovieClip)))
	(define-method prevScene ((self MovieClip)))
	(define-method play ((self MovieClip)))
	(define-method addFrameScript ((self MovieClip)))
	(define-method nextFrame ((self MovieClip)))
	(define-method enabled ((self MovieClip)))
	(define-method framesLoaded ((self MovieClip)))
	(define-method scenes ((self MovieClip)))
	(define-method nextScene ((self MovieClip)))
	(define-method currentFrame ((self MovieClip)))
	(define-method enabled ((self MovieClip)))
	(define-method gotoAndStop ((self MovieClip)))
	(define-method currentScene ((self MovieClip)))
	(define-method trackAsMenu ((self MovieClip)))
	(define-method gotoAndPlay ((self MovieClip)))
	(define-method trackAsMenu ((self MovieClip)))
	(define-method prevFrame ((self MovieClip))))
(module accessibility ()
	(define-class Accessibility (Object) ())
	(define-class AccessibilityImplementation (Object) ())
	(define-method get_accValue ((self AccessibilityImplementation)))
	(define-method get_accFocus ((self AccessibilityImplementation)))
	(define-method get_accName ((self AccessibilityImplementation)))
	(define-method errno ((self AccessibilityImplementation)))
	(define-method accDoDefaultAction ((self AccessibilityImplementation)))
	(define-method get_accRole ((self AccessibilityImplementation)))
	(define-method getChildIDArray ((self AccessibilityImplementation)))
	(define-method get_accSelection ((self AccessibilityImplementation)))
	(define-method stub ((self AccessibilityImplementation)))
	(define-method accLocation ((self AccessibilityImplementation)))
	(define-method isLabeledBy ((self AccessibilityImplementation)))
	(define-method get_accState ((self AccessibilityImplementation)))
	(define-method accSelect ((self AccessibilityImplementation)))
	(define-method get_accDefaultAction ((self AccessibilityImplementation)))
	(define-class AccessibilityProperties (Object) ())
	(define-method shortcut ((self AccessibilityProperties)))
	(define-method name ((self AccessibilityProperties)))
	(define-method silent ((self AccessibilityProperties)))
	(define-method description ((self AccessibilityProperties)))
	(define-method forceSimple ((self AccessibilityProperties)))
	(define-method noAutoLabeling ((self AccessibilityProperties))))
(module system ()
	(define-class ApplicationDomain (Object) ())
	(define-method getDefinition ((self ApplicationDomain)))
	(define-method hasDefinition ((self ApplicationDomain)))
	(define-method parentDomain ((self ApplicationDomain)))
	(define-class SecurityDomain (Object) ())
	(define-class LoaderContext (Object) ())
	(define-method applicationDomain ((self LoaderContext)))
	(define-method checkPolicyFile ((self LoaderContext)))
	(define-method securityDomain ((self LoaderContext)))
	(define-class Security (Object) ())
	(define-class SecurityPanel (Object) ())
	(define-class System (Object) ())
	(define-class Capabilities (Object) ())
	(define-class IMEConversionMode (Object) ())
	(define-class IME (Object) ()))
(module geom ()
	(define-class ColorTransform (Object) ())
	(define-method color ((self ColorTransform)))
	(define-method redOffset ((self ColorTransform)))
	(define-method color ((self ColorTransform)))
	(define-method greenMultiplier ((self ColorTransform)))
	(define-method blueOffset ((self ColorTransform)))
	(define-method toString ((self ColorTransform)))
	(define-method alphaOffset ((self ColorTransform)))
	(define-method redMultiplier ((self ColorTransform)))
	(define-method concat ((self ColorTransform)))
	(define-method blueMultiplier ((self ColorTransform)))
	(define-method greenOffset ((self ColorTransform)))
	(define-method alphaMultiplier ((self ColorTransform)))
	(define-class Matrix (Object) ())
	(define-method ty ((self Matrix)))
	(define-method tx ((self Matrix)))
	(define-method translate ((self Matrix)))
	(define-method scale ((self Matrix)))
	(define-method transformPoint ((self Matrix)))
	(define-method concat ((self Matrix)))
	(define-method invert ((self Matrix)))
	(define-method rotate ((self Matrix)))
	(define-method deltaTransformPoint ((self Matrix)))
	(define-method clone ((self Matrix)))
	(define-method createGradientBox ((self Matrix)))
	(define-method a ((self Matrix)))
	(define-method b ((self Matrix)))
	(define-method c ((self Matrix)))
	(define-method d ((self Matrix)))
	(define-method toString ((self Matrix)))
	(define-method createBox ((self Matrix)))
	(define-method identity ((self Matrix)))
	(define-class Point (Object) ())
	(define-method length ((self Point)))
	(define-method add ((self Point)))
	(define-method toString ((self Point)))
	(define-method normalize ((self Point)))
	(define-method subtract ((self Point)))
	(define-method x ((self Point)))
	(define-method y ((self Point)))
	(define-method offset ((self Point)))
	(define-method clone ((self Point)))
	(define-method equals ((self Point)))
	(define-class Rectangle (Object) ())
	(define-method containsPoint ((self Rectangle)))
	(define-method size ((self Rectangle)))
	(define-method isEmpty ((self Rectangle)))
	(define-method width ((self Rectangle)))
	(define-method left ((self Rectangle)))
	(define-method size ((self Rectangle)))
	(define-method inflatePoint ((self Rectangle)))
	(define-method setEmpty ((self Rectangle)))
	(define-method right ((self Rectangle)))
	(define-method offset ((self Rectangle)))
	(define-method top ((self Rectangle)))
	(define-method equals ((self Rectangle)))
	(define-method intersection ((self Rectangle)))
	(define-method right ((self Rectangle)))
	(define-method left ((self Rectangle)))
	(define-method union ((self Rectangle)))
	(define-method inflate ((self Rectangle)))
	(define-method bottomRight ((self Rectangle)))
	(define-method containsRect ((self Rectangle)))
	(define-method clone ((self Rectangle)))
	(define-method bottom ((self Rectangle)))
	(define-method contains ((self Rectangle)))
	(define-method height ((self Rectangle)))
	(define-method top ((self Rectangle)))
	(define-method bottom ((self Rectangle)))
	(define-method toString ((self Rectangle)))
	(define-method bottomRight ((self Rectangle)))
	(define-method intersects ((self Rectangle)))
	(define-method topLeft ((self Rectangle)))
	(define-method y ((self Rectangle)))
	(define-method topLeft ((self Rectangle)))
	(define-method offsetPoint ((self Rectangle)))
	(define-method x ((self Rectangle)))
	(define-class Transform (Object) ())
	(define-method concatenatedMatrix ((self Transform)))
	(define-method matrix ((self Transform)))
	(define-method matrix ((self Transform)))
	(define-method concatenatedColorTransform ((self Transform)))
	(define-method colorTransform ((self Transform)))
	(define-method colorTransform ((self Transform)))
	(define-method pixelBounds ((self Transform))))
(module ui ()
	(define-class ContextMenuBuiltInItems (Object) ())
	(define-method loop ((self ContextMenuBuiltInItems)))
	(define-method clone ((self ContextMenuBuiltInItems)))
	(define-method print ((self ContextMenuBuiltInItems)))
	(define-method zoom ((self ContextMenuBuiltInItems)))
	(define-method play ((self ContextMenuBuiltInItems)))
	(define-method forwardAndBack ((self ContextMenuBuiltInItems)))
	(define-method rewind ((self ContextMenuBuiltInItems)))
	(define-method save ((self ContextMenuBuiltInItems)))
	(define-method quality ((self ContextMenuBuiltInItems)))
	(define-class Keyboard (Object) ())
	(define-class KeyLocation (Object) ())
	(define-class Mouse (Object) ())
	(define-class ContextMenu (Object) ())
	(define-method builtInItems ((self ContextMenu)))
	(define-method customItems ((self ContextMenu)))
	(define-method builtInItems ((self ContextMenu)))
	(define-method clone ((self ContextMenu)))
	(define-method customItems ((self ContextMenu)))
	(define-method hideBuiltInItems ((self ContextMenu)))
	(define-class ContextMenuItem (Object) ())
	(define-method enabled ((self ContextMenuItem)))
	(define-method caption ((self ContextMenuItem)))
	(define-method enabled ((self ContextMenuItem)))
	(define-method separatorBefore ((self ContextMenuItem)))
	(define-method visible ((self ContextMenuItem)))
	(define-method caption ((self ContextMenuItem)))
	(define-method separatorBefore ((self ContextMenuItem)))
	(define-method visible ((self ContextMenuItem)))
	(define-method clone ((self ContextMenuItem))))
(module filters ()
	(define-class DisplacementMapFilterMode (Object) ())
	(define-class BitmapFilter (Object) ())
	(define-method clone ((self BitmapFilter)))
	(define-class BitmapFilterType (Object) ())
	(define-class BitmapFilterQuality (Object) ())
	(define-class BevelFilter (Object) ())
	(define-method strength ((self BevelFilter)))
	(define-method shadowColor ((self BevelFilter)))
	(define-method strength ((self BevelFilter)))
	(define-method type ((self BevelFilter)))
	(define-method highlightAlpha ((self BevelFilter)))
	(define-method highlightColor ((self BevelFilter)))
	(define-method blurX ((self BevelFilter)))
	(define-method blurY ((self BevelFilter)))
	(define-method angle ((self BevelFilter)))
	(define-method highlightAlpha ((self BevelFilter)))
	(define-method clone ((self BevelFilter)))
	(define-method shadowAlpha ((self BevelFilter)))
	(define-method blurX ((self BevelFilter)))
	(define-method shadowColor ((self BevelFilter)))
	(define-method blurY ((self BevelFilter)))
	(define-method highlightColor ((self BevelFilter)))
	(define-method angle ((self BevelFilter)))
	(define-method distance ((self BevelFilter)))
	(define-method knockout ((self BevelFilter)))
	(define-method distance ((self BevelFilter)))
	(define-method knockout ((self BevelFilter)))
	(define-method type ((self BevelFilter)))
	(define-method shadowAlpha ((self BevelFilter)))
	(define-method quality ((self BevelFilter)))
	(define-method quality ((self BevelFilter)))
	(define-class BlurFilter (Object) ())
	(define-method blurX ((self BlurFilter)))
	(define-method blurX ((self BlurFilter)))
	(define-method blurY ((self BlurFilter)))
	(define-method quality ((self BlurFilter)))
	(define-method blurY ((self BlurFilter)))
	(define-method clone ((self BlurFilter)))
	(define-method quality ((self BlurFilter)))
	(define-class ColorMatrixFilter (Object) ())
	(define-method matrix ((self ColorMatrixFilter)))
	(define-method matrix ((self ColorMatrixFilter)))
	(define-method clone ((self ColorMatrixFilter)))
	(define-class ConvolutionFilter (Object) ())
	(define-method matrix ((self ConvolutionFilter)))
	(define-method matrix ((self ConvolutionFilter)))
	(define-method color ((self ConvolutionFilter)))
	(define-method preserveAlpha ((self ConvolutionFilter)))
	(define-method alpha ((self ConvolutionFilter)))
	(define-method color ((self ConvolutionFilter)))
	(define-method preserveAlpha ((self ConvolutionFilter)))
	(define-method alpha ((self ConvolutionFilter)))
	(define-method matrixX ((self ConvolutionFilter)))
	(define-method matrixY ((self ConvolutionFilter)))
	(define-method bias ((self ConvolutionFilter)))
	(define-method clamp ((self ConvolutionFilter)))
	(define-method matrixX ((self ConvolutionFilter)))
	(define-method matrixY ((self ConvolutionFilter)))
	(define-method bias ((self ConvolutionFilter)))
	(define-method clamp ((self ConvolutionFilter)))
	(define-method divisor ((self ConvolutionFilter)))
	(define-method clone ((self ConvolutionFilter)))
	(define-method divisor ((self ConvolutionFilter)))
	(define-class DisplacementMapFilter (Object) ())
	(define-method alpha ((self DisplacementMapFilter)))
	(define-method scaleX ((self DisplacementMapFilter)))
	(define-method clone ((self DisplacementMapFilter)))
	(define-method scaleY ((self DisplacementMapFilter)))
	(define-method mode ((self DisplacementMapFilter)))
	(define-method mapPoint ((self DisplacementMapFilter)))
	(define-method alpha ((self DisplacementMapFilter)))
	(define-method mode ((self DisplacementMapFilter)))
	(define-method mapBitmap ((self DisplacementMapFilter)))
	(define-method color ((self DisplacementMapFilter)))
	(define-method scaleX ((self DisplacementMapFilter)))
	(define-method color ((self DisplacementMapFilter)))
	(define-method mapPoint ((self DisplacementMapFilter)))
	(define-method componentX ((self DisplacementMapFilter)))
	(define-method componentY ((self DisplacementMapFilter)))
	(define-method componentX ((self DisplacementMapFilter)))
	(define-method componentY ((self DisplacementMapFilter)))
	(define-method mapBitmap ((self DisplacementMapFilter)))
	(define-method scaleY ((self DisplacementMapFilter)))
	(define-class DropShadowFilter (Object) ())
	(define-method hideObject ((self DropShadowFilter)))
	(define-method color ((self DropShadowFilter)))
	(define-method strength ((self DropShadowFilter)))
	(define-method strength ((self DropShadowFilter)))
	(define-method blurX ((self DropShadowFilter)))
	(define-method blurY ((self DropShadowFilter)))
	(define-method angle ((self DropShadowFilter)))
	(define-method inner ((self DropShadowFilter)))
	(define-method clone ((self DropShadowFilter)))
	(define-method alpha ((self DropShadowFilter)))
	(define-method hideObject ((self DropShadowFilter)))
	(define-method blurX ((self DropShadowFilter)))
	(define-method color ((self DropShadowFilter)))
	(define-method blurY ((self DropShadowFilter)))
	(define-method angle ((self DropShadowFilter)))
	(define-method distance ((self DropShadowFilter)))
	(define-method inner ((self DropShadowFilter)))
	(define-method knockout ((self DropShadowFilter)))
	(define-method distance ((self DropShadowFilter)))
	(define-method knockout ((self DropShadowFilter)))
	(define-method alpha ((self DropShadowFilter)))
	(define-method quality ((self DropShadowFilter)))
	(define-method quality ((self DropShadowFilter)))
	(define-class GlowFilter (Object) ())
	(define-method blurX ((self GlowFilter)))
	(define-method color ((self GlowFilter)))
	(define-method blurY ((self GlowFilter)))
	(define-method quality ((self GlowFilter)))
	(define-method color ((self GlowFilter)))
	(define-method strength ((self GlowFilter)))
	(define-method strength ((self GlowFilter)))
	(define-method inner ((self GlowFilter)))
	(define-method blurX ((self GlowFilter)))
	(define-method blurY ((self GlowFilter)))
	(define-method knockout ((self GlowFilter)))
	(define-method inner ((self GlowFilter)))
	(define-method knockout ((self GlowFilter)))
	(define-method alpha ((self GlowFilter)))
	(define-method clone ((self GlowFilter)))
	(define-method alpha ((self GlowFilter)))
	(define-method quality ((self GlowFilter)))
	(define-class GradientBevelFilter (Object) ())
	(define-method strength ((self GradientBevelFilter)))
	(define-method ratios ((self GradientBevelFilter)))
	(define-method knockout ((self GradientBevelFilter)))
	(define-method ratios ((self GradientBevelFilter)))
	(define-method blurX ((self GradientBevelFilter)))
	(define-method blurY ((self GradientBevelFilter)))
	(define-method angle ((self GradientBevelFilter)))
	(define-method alphas ((self GradientBevelFilter)))
	(define-method strength ((self GradientBevelFilter)))
	(define-method clone ((self GradientBevelFilter)))
	(define-method colors ((self GradientBevelFilter)))
	(define-method blurX ((self GradientBevelFilter)))
	(define-method blurY ((self GradientBevelFilter)))
	(define-method angle ((self GradientBevelFilter)))
	(define-method alphas ((self GradientBevelFilter)))
	(define-method colors ((self GradientBevelFilter)))
	(define-method distance ((self GradientBevelFilter)))
	(define-method knockout ((self GradientBevelFilter)))
	(define-method distance ((self GradientBevelFilter)))
	(define-method type ((self GradientBevelFilter)))
	(define-method type ((self GradientBevelFilter)))
	(define-method quality ((self GradientBevelFilter)))
	(define-method quality ((self GradientBevelFilter)))
	(define-class GradientGlowFilter (Object) ())
	(define-method strength ((self GradientGlowFilter)))
	(define-method strength ((self GradientGlowFilter)))
	(define-method knockout ((self GradientGlowFilter)))
	(define-method ratios ((self GradientGlowFilter)))
	(define-method ratios ((self GradientGlowFilter)))
	(define-method blurX ((self GradientGlowFilter)))
	(define-method blurY ((self GradientGlowFilter)))
	(define-method angle ((self GradientGlowFilter)))
	(define-method alphas ((self GradientGlowFilter)))
	(define-method clone ((self GradientGlowFilter)))
	(define-method colors ((self GradientGlowFilter)))
	(define-method blurX ((self GradientGlowFilter)))
	(define-method blurY ((self GradientGlowFilter)))
	(define-method angle ((self GradientGlowFilter)))
	(define-method alphas ((self GradientGlowFilter)))
	(define-method colors ((self GradientGlowFilter)))
	(define-method distance ((self GradientGlowFilter)))
	(define-method knockout ((self GradientGlowFilter)))
	(define-method distance ((self GradientGlowFilter)))
	(define-method type ((self GradientGlowFilter)))
	(define-method type ((self GradientGlowFilter)))
	(define-method quality ((self GradientGlowFilter)))
	(define-method quality ((self GradientGlowFilter))))
(module events ()
	(define-class Event (Object) ())
	(define-method isDefaultPrevented ((self Event)))
	(define-method formatToString ((self Event)))
	(define-method stopImmediatePropagation ((self Event)))
	(define-method eventPhase ((self Event)))
	(define-method preventDefault ((self Event)))
	(define-method currentTarget ((self Event)))
	(define-method toString ((self Event)))
	(define-method bubbles ((self Event)))
	(define-method target ((self Event)))
	(define-method cancelable ((self Event)))
	(define-method stopPropagation ((self Event)))
	(define-method type ((self Event)))
	(define-method clone ((self Event)))
	(define-class EventPhase (Object) ())
	(define-class IEventDispatcher (Object) ())
	(define-method lash.events:IEventDispatcher.dispatchEvent ((self IEventDispatcher)))
	(define-method lash.events:IEventDispatcher.hasEventListener ((self IEventDispatcher)))
	(define-method lash.events:IEventDispatcher.willTrigger ((self IEventDispatcher)))
	(define-method lash.events:IEventDispatcher.removeEventListener ((self IEventDispatcher)))
	(define-method lash.events:IEventDispatcher.addEventListener ((self IEventDispatcher)))
	(define-class ActivityEvent (Object) ())
	(define-method m_activating ((self ActivityEvent)))
	(define-method clone ((self ActivityEvent)))
	(define-method toString ((self ActivityEvent)))
	(define-method activating ((self ActivityEvent)))
	(define-method activating ((self ActivityEvent)))
	(define-class TextEvent (Object) ())
	(define-method clone ((self TextEvent)))
	(define-method toString ((self TextEvent)))
	(define-method text ((self TextEvent)))
	(define-method text ((self TextEvent)))
	(define-method m_text ((self TextEvent)))
	(define-class FocusEvent (Object) ())
	(define-method shiftKey ((self FocusEvent)))
	(define-method relatedObject ((self FocusEvent)))
	(define-method shiftKey ((self FocusEvent)))
	(define-method relatedObject ((self FocusEvent)))
	(define-method m_shiftKey ((self FocusEvent)))
	(define-method keyCode ((self FocusEvent)))
	(define-method m_keyCode ((self FocusEvent)))
	(define-method clone ((self FocusEvent)))
	(define-method toString ((self FocusEvent)))
	(define-method m_relatedObject ((self FocusEvent)))
	(define-method keyCode ((self FocusEvent)))
	(define-class HTTPStatusEvent (Object) ())
	(define-method clone ((self HTTPStatusEvent)))
	(define-method m_status ((self HTTPStatusEvent)))
	(define-method toString ((self HTTPStatusEvent)))
	(define-method status ((self HTTPStatusEvent)))
	(define-class KeyboardEvent (Object) ())
	(define-method charCode ((self KeyboardEvent)))
	(define-method keyLocation ((self KeyboardEvent)))
	(define-method altKey ((self KeyboardEvent)))
	(define-method shiftKey ((self KeyboardEvent)))
	(define-method shiftKey ((self KeyboardEvent)))
	(define-method m_shiftKey ((self KeyboardEvent)))
	(define-method m_altKey ((self KeyboardEvent)))
	(define-method keyCode ((self KeyboardEvent)))
	(define-method m_keyCode ((self KeyboardEvent)))
	(define-method clone ((self KeyboardEvent)))
	(define-method updateAfterEvent ((self KeyboardEvent)))
	(define-method ctrlKey ((self KeyboardEvent)))
	(define-method m_ctrlKey ((self KeyboardEvent)))
	(define-method charCode ((self KeyboardEvent)))
	(define-method keyLocation ((self KeyboardEvent)))
	(define-method m_keyLocation ((self KeyboardEvent)))
	(define-method toString ((self KeyboardEvent)))
	(define-method ctrlKey ((self KeyboardEvent)))
	(define-method m_charCode ((self KeyboardEvent)))
	(define-method altKey ((self KeyboardEvent)))
	(define-method keyCode ((self KeyboardEvent)))
	(define-class ContextMenuEvent (Object) ())
	(define-method m_mouseTarget ((self ContextMenuEvent)))
	(define-method contextMenuOwner ((self ContextMenuEvent)))
	(define-method mouseTarget ((self ContextMenuEvent)))
	(define-method clone ((self ContextMenuEvent)))
	(define-method contextMenuOwner ((self ContextMenuEvent)))
	(define-method toString ((self ContextMenuEvent)))
	(define-method m_contextMenuOwner ((self ContextMenuEvent)))
	(define-method mouseTarget ((self ContextMenuEvent)))
	(define-class MouseEvent (Object) ())
	(define-method m_buttonDown ((self MouseEvent)))
	(define-method relatedObject ((self MouseEvent)))
	(define-method m_shiftKey ((self MouseEvent)))
	(define-method m_altKey ((self MouseEvent)))
	(define-method getStageY ((self MouseEvent)))
	(define-method localX ((self MouseEvent)))
	(define-method stageY ((self MouseEvent)))
	(define-method localY ((self MouseEvent)))
	(define-method getStageX ((self MouseEvent)))
	(define-method stageX ((self MouseEvent)))
	(define-method m_ctrlKey ((self MouseEvent)))
	(define-method delta ((self MouseEvent)))
	(define-method updateAfterEvent ((self MouseEvent)))
	(define-method relatedObject ((self MouseEvent)))
	(define-method localX ((self MouseEvent)))
	(define-method localY ((self MouseEvent)))
	(define-method clone ((self MouseEvent)))
	(define-method m_localX ((self MouseEvent)))
	(define-method m_localY ((self MouseEvent)))
	(define-method m_delta ((self MouseEvent)))
	(define-method ctrlKey ((self MouseEvent)))
	(define-method toString ((self MouseEvent)))
	(define-method buttonDown ((self MouseEvent)))
	(define-method altKey ((self MouseEvent)))
	(define-method buttonDown ((self MouseEvent)))
	(define-method altKey ((self MouseEvent)))
	(define-method delta ((self MouseEvent)))
	(define-method m_relatedObject ((self MouseEvent)))
	(define-method shiftKey ((self MouseEvent)))
	(define-method ctrlKey ((self MouseEvent)))
	(define-method shiftKey ((self MouseEvent)))
	(define-class NetStatusEvent (Object) ())
	(define-method clone ((self NetStatusEvent)))
	(define-method toString ((self NetStatusEvent)))
	(define-method info ((self NetStatusEvent)))
	(define-method m_info ((self NetStatusEvent)))
	(define-method info ((self NetStatusEvent)))
	(define-class NetFilterEvent (Object) ())
	(define-method data ((self NetFilterEvent)))
	(define-method clone ((self NetFilterEvent)))
	(define-method toString ((self NetFilterEvent)))
	(define-method header ((self NetFilterEvent)))
	(define-class ProgressEvent (Object) ())
	(define-method bytesLoaded ((self ProgressEvent)))
	(define-method bytesTotal ((self ProgressEvent)))
	(define-method clone ((self ProgressEvent)))
	(define-method bytesLoaded ((self ProgressEvent)))
	(define-method m_bytesTotal ((self ProgressEvent)))
	(define-method toString ((self ProgressEvent)))
	(define-method bytesTotal ((self ProgressEvent)))
	(define-method m_bytesLoaded ((self ProgressEvent)))
	(define-class StatusEvent (Object) ())
	(define-method level ((self StatusEvent)))
	(define-method level ((self StatusEvent)))
	(define-method code ((self StatusEvent)))
	(define-method clone ((self StatusEvent)))
	(define-method toString ((self StatusEvent)))
	(define-method code ((self StatusEvent)))
	(define-method m_level ((self StatusEvent)))
	(define-method m_code ((self StatusEvent)))
	(define-class SyncEvent (Object) ())
	(define-method clone ((self SyncEvent)))
	(define-method toString ((self SyncEvent)))
	(define-method changeList ((self SyncEvent)))
	(define-method m_changeList ((self SyncEvent)))
	(define-method changeList ((self SyncEvent)))
	(define-class TimerEvent (Object) ())
	(define-method clone ((self TimerEvent)))
	(define-method toString ((self TimerEvent)))
	(define-method updateAfterEvent ((self TimerEvent)))
	(define-class EventDispatcher (Object) ())
	(define-method dispatchEvent ((self EventDispatcher)))
	(define-method willTrigger ((self EventDispatcher)))
	(define-method toString ((self EventDispatcher)))
	(define-method removeEventListener ((self EventDispatcher)))
	(define-method hasEventListener ((self EventDispatcher)))
	(define-method dispatchEventFunction ((self EventDispatcher)))
	(define-method addEventListener ((self EventDispatcher)))
	(define-class DataEvent (Object) ())
	(define-method data ((self DataEvent)))
	(define-method toString ((self DataEvent)))
	(define-method data ((self DataEvent)))
	(define-method clone ((self DataEvent)))
	(define-class ErrorEvent (Object) ())
	(define-method toString ((self ErrorEvent)))
	(define-method clone ((self ErrorEvent)))
	(define-class IMEEvent (Object) ())
	(define-method toString ((self IMEEvent)))
	(define-method clone ((self IMEEvent)))
	(define-class AsyncErrorEvent (Object) ())
	(define-method clone ((self AsyncErrorEvent)))
	(define-method toString ((self AsyncErrorEvent)))
	(define-method error ((self AsyncErrorEvent)))
	(define-class IOErrorEvent (Object) ())
	(define-method clone ((self IOErrorEvent)))
	(define-method toString ((self IOErrorEvent)))
	(define-class SecurityErrorEvent (Object) ())
	(define-method clone ((self SecurityErrorEvent)))
	(define-method toString ((self SecurityErrorEvent))))
(module external ()
	(define-class ExternalInterface (Object) ()))
(module printing ()
	(define-class PrintJobOptions (Object) ())
	(define-method printAsBitmap ((self PrintJobOptions)))
	(define-class PrintJobOrientation (Object) ())
	(define-class PrintJob (Object) ())
	(define-method send ((self PrintJob)))
	(define-method orientation ((self PrintJob)))
	(define-method paperHeight ((self PrintJob)))
	(define-method pageHeight ((self PrintJob)))
	(define-method _invoke ((self PrintJob)))
	(define-method toClassicRectangle ((self PrintJob)))
	(define-method paperWidth ((self PrintJob)))
	(define-method addPage ((self PrintJob)))
	(define-method start ((self PrintJob)))
	(define-method pageWidth ((self PrintJob)))
	(define-method invoke ((self PrintJob))))
(module media ()
	(define-class ID3Info (Object) ())
	(define-method songName ((self ID3Info)))
	(define-method genre ((self ID3Info)))
	(define-method artist ((self ID3Info)))
	(define-method track ((self ID3Info)))
	(define-method album ((self ID3Info)))
	(define-method year ((self ID3Info)))
	(define-method comment ((self ID3Info)))
	(define-class SoundLoaderContext (Object) ())
	(define-method checkPolicyFile ((self SoundLoaderContext)))
	(define-method bufferTime ((self SoundLoaderContext)))
	(define-class SoundTransform (Object) ())
	(define-method pan ((self SoundTransform)))
	(define-method rightToLeft ((self SoundTransform)))
	(define-method rightToRight ((self SoundTransform)))
	(define-method leftToLeft ((self SoundTransform)))
	(define-method rightToRight ((self SoundTransform)))
	(define-method leftToLeft ((self SoundTransform)))
	(define-method volume ((self SoundTransform)))
	(define-method volume ((self SoundTransform)))
	(define-method leftToRight ((self SoundTransform)))
	(define-method leftToRight ((self SoundTransform)))
	(define-method pan ((self SoundTransform)))
	(define-method rightToLeft ((self SoundTransform)))
	(define-class SoundMixer (Object) ())
	(define-class Camera (Object) ())
	(define-method setMotionLevel ((self Camera)))
	(define-method motionTimeout ((self Camera)))
	(define-method index ((self Camera)))
	(define-method loopback ((self Camera)))
	(define-method setLoopback ((self Camera)))
	(define-method width ((self Camera)))
	(define-method setCursor ((self Camera)))
	(define-method name ((self Camera)))
	(define-method setMode ((self Camera)))
	(define-method height ((self Camera)))
	(define-method fps ((self Camera)))
	(define-method muted ((self Camera)))
	(define-method motionLevel ((self Camera)))
	(define-method currentFPS ((self Camera)))
	(define-method bandwidth ((self Camera)))
	(define-method keyFrameInterval ((self Camera)))
	(define-method activityLevel ((self Camera)))
	(define-method setKeyFrameInterval ((self Camera)))
	(define-method setQuality ((self Camera)))
	(define-method quality ((self Camera)))
	(define-class Microphone (Object) ())
	(define-method rate ((self Microphone)))
	(define-method setUseEchoSuppression ((self Microphone)))
	(define-method name ((self Microphone)))
	(define-method index ((self Microphone)))
	(define-method useEchoSuppression ((self Microphone)))
	(define-method soundTransform ((self Microphone)))
	(define-method rate ((self Microphone)))
	(define-method silenceTimeout ((self Microphone)))
	(define-method silenceLevel ((self Microphone)))
	(define-method setSilenceLevel ((self Microphone)))
	(define-method muted ((self Microphone)))
	(define-method setLoopBack ((self Microphone)))
	(define-method activityLevel ((self Microphone)))
	(define-method soundTransform ((self Microphone)))
	(define-method gain ((self Microphone)))
	(define-method gain ((self Microphone)))
	(define-class Sound (Object) ())
	(define-method _load ((self Sound)))
	(define-method bytesLoaded ((self Sound)))
	(define-method bytesTotal ((self Sound)))
	(define-method isBuffering ((self Sound)))
	(define-method load ((self Sound)))
	(define-method _buildLoaderContext ((self Sound)))
	(define-method url ((self Sound)))
	(define-method play ((self Sound)))
	(define-method length ((self Sound)))
	(define-method id3 ((self Sound)))
	(define-method close ((self Sound)))
	(define-class SoundChannel (Object) ())
	(define-method stop ((self SoundChannel)))
	(define-method position ((self SoundChannel)))
	(define-method rightPeak ((self SoundChannel)))
	(define-method leftPeak ((self SoundChannel)))
	(define-method soundTransform ((self SoundChannel)))
	(define-method soundTransform ((self SoundChannel)))
	(define-class Video (Object) ())
	(define-method deblocking ((self Video)))
	(define-method videoHeight ((self Video)))
	(define-method videoWidth ((self Video)))
	(define-method smoothing ((self Video)))
	(define-method deblocking ((self Video)))
	(define-method attachNetStream ((self Video)))
	(define-method attachCamera ((self Video)))
	(define-method smoothing ((self Video)))
	(define-method clear ((self Video))))
(module xml ()
	(define-class XMLNode (Object) ())
	(define-method escapeXML ((self XMLNode)))
	(define-method previousSibling ((self XMLNode)))
	(define-method parentNode ((self XMLNode)))
	(define-method nodeValue ((self XMLNode)))
	(define-method init ((self XMLNode)))
	(define-method namespaceURI ((self XMLNode)))
	(define-method prefix ((self XMLNode)))
	(define-method firstChild ((self XMLNode)))
	(define-method _childNodes ((self XMLNode)))
	(define-method nextSibling ((self XMLNode)))
	(define-method attributes ((self XMLNode)))
	(define-method nodeType ((self XMLNode)))
	(define-method appendChild ((self XMLNode)))
	(define-method lastChild ((self XMLNode)))
	(define-method insertBefore ((self XMLNode)))
	(define-method getNamespaceForPrefix ((self XMLNode)))
	(define-method nodeName ((self XMLNode)))
	(define-method attributes ((self XMLNode)))
	(define-method hasChildNodes ((self XMLNode)))
	(define-method childNodes ((self XMLNode)))
	(define-method _attributes ((self XMLNode)))
	(define-method localName ((self XMLNode)))
	(define-method getPrefixForNamespace ((self XMLNode)))
	(define-method toString ((self XMLNode)))
	(define-method removeNode ((self XMLNode)))
	(define-method cloneNode ((self XMLNode)))
	(define-class XMLNodeType (Object) ())
	(define-class XMLDocument (Object) ())
	(define-method idMap ((self XMLDocument)))
	(define-method createElement ((self XMLDocument)))
	(define-method xmlDecl ((self XMLDocument)))
	(define-method docTypeDecl ((self XMLDocument)))
	(define-method parseXML ((self XMLDocument)))
	(define-method createTextNode ((self XMLDocument)))
	(define-method toString ((self XMLDocument)))
	(define-method ignoreWhite ((self XMLDocument))))
